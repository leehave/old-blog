upstream nodejs {
    server 127.0.0.1:3000;
    #server 127.0.0.1:3000;
    keepalive 64;
}
server {
    listen 80;
    server_name felzx.cn;
    # return 301 http://www.felzx.cn$request_uri;
    rewrite ^(.*)$ https://$server_name$1 permanent;
}
server {
    # listen 443 ssl;
    server_name  www.felzx.cn;
    # ssl on;
    ssl_certificate      /etc/nginx/1_www.felzx.cn_bundle.crt;
    ssl_certificate_key  /etc/nginx/2_www.felzx.cn.key;
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 70;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置
    ssl_prefer_server_ciphers on;
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /root/iBlog2/public/;
        
        index  index.html index.htm;
        fastcgi_param   SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;
            include         fastcgi_params;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host  $http_host;
        proxy_set_header X-Nginx-Proxy true;
        proxy_set_header Connection "";
        proxy_pass http://127.0.0.1:3000/;
        proxy_redirect default;
    }
    location ~ /.well-known {
        allow all;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

